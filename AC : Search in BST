AC : Search in a Bimary Search tree


Code :  

       class Main {
    static class Node {
        int data;
        Node left;
        Node right;
        
        Node(int data){
            this.data = data;
        }
    }
     public static Node insert(Node root , int val){
          if(root == null){
              root = new Node(val);
              return root;
          }
          
          if(root.data > val){
              // Left SubTree
              root.left = insert(root.left , val);
          }else{
              // Right Sub Tree
              root.right = insert(root.right , val);
          }
          return root;
     }
     public static void inorder(Node root){
         if(root == null){
             return;
         }
         inorder(root.left);
         System.out.print(root.data+" ");
         inorder(root.right);
     }
     public static boolean searchBST(Node root , int key){
          if(root == null){
              return false;
          }
           if(root.data == key){
              return true;
          }
          
          if(root.data > key){
             return searchBST(root.left , key);
          }else{
           return searchBST(root.right , key);
          }
     }
    
    
    public static void main(String[] args) {
       int values[] = {5 ,1 ,3 ,4 ,2 , 7};
       Node root = null;
        
        for(int i=0; i<values.length; i++){
            root = insert(root , values[i]);
        }
        
        int key = 8;
      
        System.out.println( searchBST(root , key));
        
     //   inorder(root);
     //   System.out.println();
    }
}
