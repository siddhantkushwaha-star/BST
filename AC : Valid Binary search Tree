AC : valid Binary Search tree

 Code : 

import java.util.*;

class Main {
    static class Node {
        int data;
        Node left;
        Node right;
        
        Node(int data){
            this.data = data;
        }
    }
  public static boolean isValidBST(Node root , Node min , Node max){
        if(root == null){
            return true;
        }
        
        if(min != null && root.data <= min.data){
            return false;
        }
        else if(max != null && root.data >= max.data){
            return false;
        }
        return isValidBST(root.left , min ,root) && isValidBST(root.right ,root , max);
    }
    
    public static void main(String[] args) {
       int values[] = {8,5,3,1,4,6,10,11,14};
       Node root = null;
        
        for(int i=0; i<values.length; i++){
            root = insert(root , values[i]);
        }
        
        inorder(root);
        System.out.println();
     
     
       printRoot2Leaf(root , new ArrayList<>());
       
       if(isValidBST(root , null ,null)){
           System.out.println(" Valid");
       }else{
              System.out.println("Not Valid");
       }
    }
    }
